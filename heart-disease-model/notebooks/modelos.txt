LogisticRegression(penalty="l2",solver="lbfgs", C=0.25, max_iter=20000, tol=1e-6)

{‘lbfgs’, ‘liblinear’, ‘newton-cg’, ‘newton-cholesky’, ‘sag’, ‘saga’},


logreg_models = [
    # --- penalty = "l1"
    LogisticRegression( penalty="l1", solver="liblinear", max_iter=40000),
    LogisticRegression( penalty="l1", solver="saga", max_iter=40000),

    # --- penalty = "l2"
    LogisticRegression( penalty="l2", solver="lbfgs", max_iter=40000),
    LogisticRegression( penalty="l2", solver="liblinear", max_iter=40000),
    LogisticRegression( penalty="l2", solver="newton-cg", max_iter=40000),
    LogisticRegression( penalty="l2", solver="newton-cholesky", max_iter=40000),
    LogisticRegression( penalty="l2", solver="sag", max_iter=40000),
    LogisticRegression( penalty="l2", solver="saga", max_iter=40000),

    # --- penalty = "elasticnet"
    LogisticRegression( penalty="elasticnet", solver="saga", max_iter=40000,
                        l1_ratio=0.25),
    LogisticRegression( penalty="elasticnet", solver="saga", max_iter=40000,
                        l1_ratio=0.50),
    LogisticRegression( penalty="elasticnet", solver="saga", max_iter=40000,
                        l1_ratio=0.75),
    LogisticRegression( penalty="elasticnet", solver="saga", max_iter=40000),

    # --- penalty = None
    LogisticRegression( penalty=None, solver="lbfgs", max_iter=40000),
    LogisticRegression( penalty=None, solver="newton-cg", max_iter=40000),
    LogisticRegression( penalty=None, solver="newton-cholesky", max_iter=40000),
    LogisticRegression( penalty=None, solver="sag", max_iter=40000),
    LogisticRegression( penalty=None, solver="saga", max_iter=40000),
]

DecisionTreeClassifier(max_depth=None, criterion="gini",    min_samples_split=2,  min_samples_leaf=1,  max_features=None),

divisor {“mejor”, “aleatorio”},

DecisionTreeClassifier( criterion="gini", splitter="best", max_depth=15, max_features=0.5 )
DecisionTreeClassifier( criterion="gini", splitter="best", max_depth=15, max_features="sqrt" )
DecisionTreeClassifier( criterion="gini", splitter="best", max_depth=15, max_features="log2" )
DecisionTreeClassifier( criterion="gini", splitter="best", max_depth=15, max_features=None )
DecisionTreeClassifier( criterion="gini", splitter="random", max_depth=15, max_features=0.5 )
DecisionTreeClassifier( criterion="gini", splitter="random", max_depth=15, max_features="sqrt" )
DecisionTreeClassifier( criterion="gini", splitter="random", max_depth=15, max_features="log2" )
DecisionTreeClassifier( criterion="gini", splitter="random", max_depth=15, max_features=None )

DecisionTreeClassifier( criterion="entropy", splitter="best", max_depth=15, max_features=0.5 )
DecisionTreeClassifier( criterion="entropy", splitter="best", max_depth=15, max_features="sqrt" )
DecisionTreeClassifier( criterion="entropy", splitter="best", max_depth=15, max_features="log2" )
DecisionTreeClassifier( criterion="entropy", splitter="best", max_depth=15, max_features=None )
DecisionTreeClassifier( criterion="entropy", splitter="random", max_depth=15, max_features=0.5 )
DecisionTreeClassifier( criterion="entropy", splitter="random", max_depth=15, max_features="sqrt" )
DecisionTreeClassifier( criterion="entropy", splitter="random", max_depth=15, max_features="log2" )
DecisionTreeClassifier( criterion="entropy", splitter="random", max_depth=15, max_features=None )


DecisionTreeClassifier( criterion="log_loss", splitter="best", max_depth=15, max_features=0.5 )
DecisionTreeClassifier( criterion="log_loss", splitter="best", max_depth=15, max_features="sqrt" )
DecisionTreeClassifier( criterion="log_loss", splitter="best", max_depth=15, max_features="log2" )
DecisionTreeClassifier( criterion="log_loss", splitter="best", max_depth=15, max_features=None )
DecisionTreeClassifier( criterion="log_loss", splitter="random", max_depth=15, max_features=0.5 )
DecisionTreeClassifier( criterion="log_loss", splitter="random", max_depth=15, max_features="sqrt" )
DecisionTreeClassifier( criterion="log_loss", splitter="random", max_depth=15, max_features="log2" )
DecisionTreeClassifier( criterion="log_loss", splitter="random", max_depth=15, max_features=None )


